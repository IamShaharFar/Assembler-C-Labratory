/* errors.h */
#ifndef ERRORS_H
#define ERRORS_H

typedef enum {
    /* General errors: 0-9 */
    ERROR_SUCCESS = 0,
    ERROR_MEMORY_ALLOCATION = 1,

    /* File errors: 10-19 */
    ERROR_MISSING_AS_FILE = 10,
    ERROR_FILENAME_TOO_LONG = 11,
    ERROR_FILE_NOT_EXIST = 12,
    ERROR_LINE_TOO_LONG = 14,
    ERROR_FILE_WRITE = 15,
    ERROR_FILE_READ = 16,

    /* Mcro errors: 20-29 */
    ERROR_MCRO_NO_NAME = 20,
    ERROR_MCRO_DUPLICATE = 24,
    ERROR_MCRO_BEFORE_DEF = 27,
    ERROR_MCRO_ILLEGAL_NAME = 28,

    /* Label and register errors: 40-49 */
    ERROR_ILLEGAL_LABEL = 43,
    ERROR_LABEL_DUPLICATE = 44,

    /* Command errors: 50-59 */
    ERROR_UNKNOWN_COMMAND = 51,
    ERROR_INVALID_PARAM_COUNT = 52,
    ERROR_MISSING_COMMA = 53,
    ERROR_CONSECUTIVE_COMMAS = 54,
    ERROR_EXTRA_TEXT_AFTER_COMMAND = 55,
    ERROR_INVALID_DIRECT_OR_REGISTER_OPERAND = 56,
    ERROR_INVALID_IMMEDIATE_DIRECT_OR_REGISTER_FIRST_OPERAND = 57,
    ERROR_INVALID_DIRECT_OR_REGISTER_SECOND_OPERAND = 58,
    ERROR_INVALID_IMMEDIATE_DIRECT_OR_REGISTER_SECOND_OPERAND = 59,
    ERROR_INVALID_DIRECT_FIRST_OPERAND = 60,
    ERROR_INVALID_RELATIVE_OR_DIRECT_OPERAND = 62,
    ERROR_INVALID_IMMEDIATE_OPERAND = 63,
    ERROR_INVALID_IMMEDIATE_DIRECT_OR_REGISTER_OPERAND = 64,

    /* Data storage errors */
    ERROR_INVALID_DATA_NO_NUMBER = 70,
    ERROR_INVALID_DATA_NON_NUMERIC = 71,
    ERROR_INVALID_DATA_TRAILING_COMMA = 72,
    ERROR_INVALID_DATA_UNEXPECTED_CHAR = 73,
    ERROR_INVALID_STRING_NO_QUOTE = 74,
    ERROR_INVALID_STRING_MISSING_END_QUOTE = 75,
    ERROR_INVALID_STRING_EXTRA_CHARS = 76,
    ERROR_INVALID_STORAGE_DIRECTIVE = 77,
    ERROR_INVALID_LABEL_CONTENT = 78
    
} ErrorCode;

typedef struct {
    ErrorCode code;
    const char* name;     
    const char* message; 
} Error;

extern const Error errors[];

void print_error(ErrorCode code, int line_number);
void print_error_no_line(ErrorCode code);
const char* get_error_message(ErrorCode code);
const char* get_error_name(ErrorCode code);

#endif /* ERRORS_H */